openapi: 3.0.2
info:
  title: Geo Information API
  description: |-
    The Geo Information REST API provides information about points of interest (places) and dossiers from the ETHorama database. Place data is available as GeoJSON.
        
    &#x279C; [OAS 3 Swagger Documentation](https://eth-library.github.io/apiplatform-swagger/geo/v1/)

    &#x279C; [ETHorama Application](https://ethorama.library.ethz.ch/)
  version: '1.0.1'
  termsOfService: https://developer.library.ethz.ch/terms
  contact:
    name: API Management ETH Library
    email: api@library.ethz.ch
    url: https://library.ethz.ch
  license:
    url: https://developer.library.ethz.ch/terms
    name: Bibliographic metadata that are not specifically marked are free for general use (Public Domain). Documents, images or other digital objects linked in metadata may be subject to other copyright restrictions. Whenever possible, the licence of the referenced digital objects is indicated in the metadata. In case of doubt, the licence can be inquired at api@library.ethz.ch.
servers:
  - url: https://api.library.ethz.ch/geo/v1/
    description: Production
paths:
  /places:
    get:
      tags:
        - Places
      description: |-
        Returns all places defined in the ETHorama database.
      responses:
        '200':
          description: Returns Places as JSON
          content:
            application/json: {}
        '500':
          description: server error
  /places/geojson:
    get:
      tags:
        - Places
      description: |-
        Returns all or filtered places defined in the ETHorama database as geoJSON.
      parameters:
        - name: nearto
          schema:
            type: string
          in: query
          required: false
          description: |-
            Places nearto a point, which is defined by the comma separated value: lat, lng, distance in meter (default: 1000). 

             Example: nearto=47.383046,8.536655,2000
      responses:
        '200':
          description: Returns a geoJSON FeatureCollection
          content:
            application/json: {}
        '500':
          description: server error
  /places/geojson/{id}:
    get:
      tags:
        - Places
      description: Returns place (by POI ID or Wikidata QID) as geoJSON
      parameters:
        - name: id
          schema:
            type: string
          in: path
          required: true
          description: ID from ETHorama (2o6hEWTkOGDL35HANR5c) or Wikidata QID (Q64093)
      responses:
        '200':
          description: Returns a place as geoJSON Feature
          content:
            application/json: {}
        '404':
          description: there is no place available with this id
          content:
            text/html: {}
  /resources:
    get:
      description: |-
        Returns geodata: pois (from ETHorama), e-rara maps, e-maps, places (Marc 651 from e-rara and e-maps).
      parameters:
        - name: lat, lon, dist
          schema:
            type: string
          in: query
          required: false
          description: |-
            Returns the data near a point defined by lat (latitude) and lon (longitude) and optionally dist (distance) in metres (default: 1000).

            Example: lat=47.349952&lon=8.490838&distance=1000
        - name: q
          schema:
            type: string
          in: query
          required: false
          description: |-
            Returns the data for the search term (q).

            Example: lat=47.349952&lon=8.490838&distance=1000
      responses:
        '200':
          description: Returns geodata as JSON
          content:
            application/json: {}
        '400':
          description: bad request
        '500':
          description: server error

  /dossiers:
    get:
      tags:
        - Dossiers
      description: |-
        Returns dossiers defined in the ETHorama database.
      responses:
        '200':
          description: Returns Dossiers as JSON
          content:
            application/json: {}
        '500':
          description: server error
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: query
      name: apikey
security:
  - ApiKeyAuth: []
externalDocs:
  description: OAS 3 Swagger Documentation
  url: https://apisdocs.library.ethz.ch/geo/v1/
